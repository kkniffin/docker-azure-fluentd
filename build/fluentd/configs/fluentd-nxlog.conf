#### LAYOUT & NOTES #######################################################################
# For Parsed Documents: keep type and add parsed to end ex: syslog.info.<type>.parsed
# * matches a single tag part.
# ** matches zero or more tag parts.
# Fluentd tries to match tags in the order that they appear in the config file.
# Can't use test.**.test.** will lock up and wont work
#
#
#
#
###########################################################################################

####################
###### SOURCES #####
####################

<source>
   @type tcp
   format json
   port 5140
   tag windowslog
 </source>    


#####################
##### MANIPULATE ####
#####################

#### Add Server Received Time to Records
<filter windowslog>
  @type record_modifier
  <record>
    syslog_server_received_time ${Time.at(time).to_s}
  </record>
</filter>

######################################
##### Beat Processing ################
######################################

#<match windowslog>
#  type flatten_hash
#  add_tag_prefix flattened.
#  separator _
#</match>

<match windowslog.**>
  type rewrite_tag_filter
  rewriterule1 NXLogFileType ^dhcp$  rawbeat.dhcp.log
  rewriterule2 NXLogFileType ^nps$  nps.log
  rewriterule3 NXLogFileType ^dns$  rawbeat.dns.log
  rewriterule4 NXLogFileType ^wineventlog$  rawbeat.winevent.log
  rewriterule5 NXLogFileType ^iis$ rawbeat.iis.log
  rewriterule6 NXLogFileType .+ rawbeat.nonmatched
</match>

# Parse Server 2012/2012 R2 DHCP Logs
<match rawbeat.dhcp.log>
  @type parser
  key_name message
  reserve_data yes
  format /^(?<dhcp_id>\d+),(?<dhcp_date>.*?),(?<dhcp_time>.*?),(?<dhcp_description>.*?),(?<dhcp_ipaddress>.*?),(?<dhcp_hostname>.*?),(?<dhcp_macaddress>.*?),(?<dhcp_username>.*?),(?<dhcp_transactionid>.*?),(?<dhcp_qresult>.*?),(?<dhcp_probationtime>.*?),(?<dhcp_correlationid>.*?),(?<dhcp_dhcid>.*?),(?<dhcp_vendorclassHex>.*?),(?<dhcp_vendorclassascii>.*?),(?<dhcp_userclasshex>.*?),(?<dhcp_userclassascii>.*?),(?<dhcp_relayagentinformation>.*?),(?<dhcp_dnsregerror>.*?)$/
  suppress_parse_error_log false
  remove_prefix rawbeat
</match>

# Parse Server 2012/2012 R2 DNS Debug Logs
# Caveats: Log file needs to reside on C: drive otherwise locking issues seems to occur and file doesnt get re-created properly
# Log Packets for Debugging: Enabled
# Packet Direction: Outgoing/Incoming for TCP/UDP
# Packet Contents: Queries/Transfers & Updates for Request & Response

<match rawbeat.dns.log>
  @type parser
  key_name message
  reserve_data yes
  format /^(?<log_date>\d+/\d+/\d+)\s+(?<log_time>\d+:\d+:\d+ (AM|PM))\s+(?<thread_id>[A-Za-z0-9]+)\s+(?<context>[A-Za-z]+?)\s+(?<packet_identifier>[A-Za-z0-9]+)\s+(?<protocol_indicator>(UDP|TCP))\s+(?<send_receive_indicator>.+?)\s+(?<remote_ip>.+?)\s+(?<xid>.+?)\s+(?<query_response>(R|\s))\s+(?<opcode>(Q|N|U|\?))\s+\[(?<flags_hex>.+?)\s+(?<flags_charcodes>(A|T|D|R|\s)+)\s+(?<response_code>.+?)\]\s+(?<question_type>.+?)\s+(?<question_name>.+?)$/
  suppress_parse_error_log false
  add_prefix parse
</match>

# in questionname format is (3)test(2)bob(1)com
# Replaces (digit) with . to become .test.bob.com
<match parse.rawbeat.dns.log>
  @type rewrite
  remove_prefix parse.rawbeat
  <rule>
    key question_name
    pattern \(\d+\)
    replace .
  </rule>
</match>

# Parse Server 2012/2012 R2 DHCP Logs
<match rawbeat.iis.log>
  @type parser
  key_name message
  reserve_data yes
  format /^(?<date>\d+-\d+-\d+)\s(?<time>\d+:\d+:\d+)\s(?<s-sitename>[A-Za-z0-9]+?)\s(?<s-computername>.+?)\s(?<s-ip>[0-9.]+)\s(?<cs-method>.+?)\s(?<cs-uri-stem>.+?)\s(?<cs-uri-query>.+?)\s(?<s-port>\d+)\s(?<cs-username>.+?)\s(?<c-ip>[0-9.]+)\s(?<cs-version>.+?)\s(?<cs_useragent>.+?)\s(?<cs_cookie>.+?)\s(?<cs_referer>.+?)\s(?<cs-host>.+?)\s(?<sc-status>\d+)\s(?<sc-substatus>\d+)\s(?<sc-win32-status>\d+)\s(?<sc-bytes>\d+)\s(?<cs-bytes>\d+)\s(?<time-taken>\d+)$/
  suppress_parse_error_log false
  remove_prefix rawbeat
</match>

######################
##### OUTPUT #########
######################

<match {*beat,tacacs,dhcp,nps,dns,iis}.**>
  @type forest
  subtype copy
  <template>
    <store>
        @type elasticsearch
        hosts "#{ENV['ES_SERVER']},#{ENV['ES_SERVER2']}"
#        reload_on_failure true
#        request_timeout 15s
        user "#{ENV['ES_USER']}"
        password "#{ENV['ES_PASSWORD']}"
        port 9200
        logstash_format true
        logstash_prefix ${tag_parts[0]}
        logstash_dateformat %Y.%m
#        buffer_type memory
#        flush_interval 60s
#        retry_limit 17
#        retry_wait 1s
#        max_retry_wait 10s
#        num_threads 1
#        buffer_chunk_limit 100m
#        buffer_queue_limit 128
        flatten_hashes true
        flatten_hashes_separator _
    </store>
    <store>
      @type file
      path /data_log/logs/${tag_parts[0]}
      time_slice_format %Y%m%d
      time_slice_wait 10m
      time_format %Y%m%dT%H%M%S%z
      compress gzip
      utc 
      buffer_path /data_log/logs/${tag}.*
    </store>
  </template>
</match>

<match **>
  @type file
  path /data_log/logs/unmatched-nxlog
  time_slice_format %Y%m%d
  time_slice_wait 10m
  time_format %Y%m%dT%H%M%S%z
  compress gzip
  utc
  buffer_path /data_log/logs/unmatched-nxlog.*
</match>

#### DEBUG TEST
#<match **>
#  @type file
#  path /data_log/logs/debug
#  time_slice_format %Y%m%d
#  time_slice_wait 10m
#  time_format %Y%m%dT%H%M%S%z
#  compress gzip
#  utc
#  buffer_path /data_log/logs/debug.*
#</match>
